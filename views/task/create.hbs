<script>
    var deletedTaskNames = []; // an array with the names of removed tasks

    /*Remove task from table*/
    $(document).on('click', '.remove', function () {

        var taskWeight = Number($(this).closest('tr').find('td:last').text()); //retrieves task weight for task to be deleted
        var taskName = $(this).closest('tr').find('td:nth-child(4)').text(); //retrieved task name for task to be deleted

        deletedTaskNames.push(taskName); //adds task name to the array

        $(this).closest('tr').remove(); //removes selected task/row in the table

        totalWeight -= taskWeight; //subtracts deleted task's weight from total weight

        $("#totalWeight").text('' + totalWeight + '%'); //displays updated total weight
        return false;

    });


    /* Set minimum requirement for task deadline*/
    $(document).ready(function(){
        var currentDate = new Date();

        let date = currentDate.getDate();
        if (date < 10)
            date = '0' + date;
        let month = currentDate.getMonth()+1;
        if (month < 10)
            month = '0' + month;
        let year = currentDate.getFullYear();

        var minDate = '' + year + '-' + month + '-' + date;

        $("#taskDeadline").attr({"min": minDate});
    });

    let tasks = [];
    let totalWeight = 0;

    /*Adds current task from input to the table below the input form*/
    function addToTable() {
        var projectDueDate = $("#projectDueDate").val();

        let task = {
            taskName: document.getElementsByName("taskName")[0].value,
            taskDescription: document.getElementsByName("taskDescription")[0].value,
            taskDeadline: document.getElementsByName("taskDeadline")[0].value,
            taskProjectId: document.getElementsByName("taskProject")[0].value,
            taskTeamId: document.getElementsByName("taskTeam")[0].value,
            taskWeight: document.getElementsByName("taskWeight")[0].value,
        };

        let isDataComplete = true;

        if (task.taskName == '') {
            isDataComplete = false;
        }

        if (task.taskDescription == '') {
            isDataComplete = false;
        }

        if (task.taskDeadline == '') {
            isDataComplete = false;
        }

        if (task.taskProjectId == '') {
            isDataComplete = false;
        }

        if (task.taskTeamId == '') {
            isDataComplete = false;
        }

        if (task.taskWeight == '') {
            isDataComplete = false;
        }

        var currentDeadline = Date.parse(document.getElementsByName("taskDeadline")[0].value);

        if (!isDataComplete) {
            alert("Please fill in all required fields!")

        } else {
            if (currentDeadline > projectDueDate) {
                alert("Task deadline cannot be later than project due date!");

                $("#taskDeadline").val('').focus();
            }

            else {
                if(Number(task.taskWeight) < 0 || Number(task.taskWeight)>100) {
                    alert("TaskWeight cannot be negative or bigger than 100");

                    $("#taskWeight").val('').focus();
                }

                else {
                    totalWeight += Number(task.taskWeight);
                    if (totalWeight > 100) {
                        totalWeight -= Number(task.taskWeight);

                        alert("Total weight cannot be bigger than 100");

                        $("#taskWeight").val('').focus();
                    }

                    else {
                        let isTaskNameDuplicate = false;

                        if (tasks.length > 0) {
                            tasks.forEach(function (singleTask) {

                                if(singleTask.taskName == task.taskName) {
                                    isTaskNameDuplicate = true;
                                }
                            })
                        }

                        if (isTaskNameDuplicate && !deletedTaskNames.includes(task.taskName)) {
                            totalWeight -= Number(task.taskWeight);

                            alert("Please enter different task name!");

                            $("#taskName").val('').focus();

                        } else {
                            /* Inserts a new row to the table with tasks*/
                            var table = document.getElementById("tasks");
                            var row = table.insertRow();
                            var cell1 = row.insertCell(0);
/*                            var cell2 = row.insertCell(1);
                            var cell3 = row.insertCell(2);*/
                            var cell2 = row.insertCell(1);
                            var cell3 = row.insertCell(2);
                            var cell4 = row.insertCell(3);
                            var cell5 = row.insertCell(4);

                            cell1.innerHTML = document.getElementsByName("taskName")[0].value;
                            cell2.innerHTML = document.getElementsByName("taskDescription")[0].value;
                            cell3.innerHTML = document.getElementsByName("taskDeadline")[0].value;
                            cell4.innerHTML = document.getElementsByName("taskWeight")[0].value + '%';
                            cell5.innerHTML = '<btn id="remove" type="button" class="btn btn-default remove"><span class="glyphicon glyphicon-trash"></span></btn>';

                            $("#taskName").val('').focus();
                            $("#taskDescription").val('');
                            $("#taskDeadline").val('');
                            $("#taskWeight").val('');

                            tasks.push(task);
                            $("#totalWeight").text('' + totalWeight + '%');
                        }
                    }
                }
            }
        }
    }

    /* Sends an array with tasks as a post request to URL '/task/create' and tasks are created*/
    function sendData() {

        if(totalWeight != 100) {
            alert("Total weight must be 100%!")

            $("#taskName").focus();
        } else {
            tasks.forEach(function (task) {
                $.post('/task/create',
                        {taskName: task.taskName,
                            taskDescription: task.taskDescription,
                            taskDeadline: task.taskDeadline,
                            taskProjectId: task.taskProjectId,
                            taskTeamId: task.taskTeamId,
                            taskComment: '',
                            taskActive: true,
                            taskWeight: task.taskWeight,
                        }, function () {
                        });
            });

            window.location.replace('/project/list')
        }
    }
</script>

<main>
    {{#if user}}
        <ol class="container breadcrumb transparent">
            <li><a href="/project/list">Home</a></li>
            <li><a href="/project/create">Create New Project</a></li>
            <li class="active">Add Project Tasks</li>
        </ol>

        <div class="container">

            <div class="page-header">
                <h1>{{task.taskProjectId.projectName}}Add project tasks</h1>
            </div>

            <form class="form-horizontal" method="post" action="/task/create" id="tasksForm">
                <fieldset>

                    <div class="col-sm-5">
                        <div class="form-group" hidden>
                            <label class="col-md-3 control-label" for="taskProject">Project</label>
                            <div class="col-md-9">
                                <input type="text" class="form-control" id="taskProject" placeholder="{{project.projectName}}" name="taskProject" required value="{{project.projectName}}">
                            </div>
                        </div>

                        <div class="form-group" hidden>
                            <label class="col-md-3 control-label" for="taskTeam">Team</label>
                            <div class="col-md-9 ">
                                <input type="text" class="form-control" id="taskTeam" placeholder="{{project.projectTeamName}}" name="taskTeam" required value="{{project.projectTeamName}}">
                            </div>
                        </div>

                        <div class="form-group" hidden>
                            <label class="col-md-3 control-label" for="projectDueDate">Project Due Date</label>
                            <div class="col-md-9 ">
                                <input type="text" class="form-control" id="projectDueDate" placeholder="{{project.dateAsNumber}}" name="projectDueDate" required value="{{project.dateAsNumber}}">
                            </div>
                        </div>

                        <!--  Task Name  -->
                        <div class="form-group">
                            <label class="col-md-3 control-label" for="taskName">Task Name</label>
                            <div class="col-md-9 ">
                                <input type="text" class="form-control" id="taskName" placeholder="Task name" name="taskName" required >
                            </div>
                        </div>

                        <!--  Task Description  -->
                        <div class="form-group">
                            <label class="col-md-3 control-label" for="taskDescription">Task Description</label>
                            <div class="col-md-9" >
                                <textarea class="form-control" rows="4" id="taskDescription" placeholder="Task Description" name="taskDescription" required ></textarea>
                            </div>
                        </div>

                        <!--  Deadline  -->
                        <div class="form-group">
                            <label class="col-md-3 control-label" for="taskDeadline">Deadline</label>
                            <div class="col-md-9 ">
                                <input type="date" min="" class="form-control" id="taskDeadline" placeholder="" name="taskDeadline" required >
                            </div>
                        </div>

                        <!--  Weight  -->
                        <div class="form-group">
                            <label class="col-md-3 control-label" for="taskWeight">Weight</label>
                            <div class="col-md-9 ">
                                <input type="number" class="form-control" id="taskWeight" placeholder="" name="taskWeight" required >
                            </div>
                        </div>

                        <!--  Add task  -->
                        <div class="form-group">
                            <div class="col-md-12">
                                <button onclick="addToTable()" type="button" class="btn btn-primary pull-right">Add task</button>
                            </div>
                        </div>
                    </div>


                    <div class="col-md-7">
                        <div class="well">

                            <h4>Tasks Added</h4>

                            <table class="table" id="tasks" width="100%">
                                <!-- Table Head -->
                                <tr>
                                    <th>Task Name</th>
                                    <th>Description</th>
                                    <th>Deadline</th>
                                    <th>Weight</th>
                                    <th>Remove</th>
                                </tr>
                            </table>

                            <div class="section text-right" style="margin-bottom: 20px">

                                <h6>Total weight: <span id="totalWeight">0%</span></h6>

                            </div>
                        </div>

                    </div>

                    <!--  Submit / Cancel  -->
                    <div class="col-sm-12">
                        <div class="modal-footer section">
                            <a href="/project/discard"><div class="btn btn-default">Discard project</div></a>
                            <button id="doneButton" type="button" class="btn btn-primary" onclick="sendData()">Done</button>
                        </div>
                    </div>

                </fieldset>
            </form>
        </div>
    {{/if}}
</main>
